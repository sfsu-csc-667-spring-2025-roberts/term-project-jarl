/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/client/js/friends.ts":
/*!**********************************!*\
  !*** ./src/client/js/friends.ts ***!
  \**********************************/
/***/ (function() {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    console.log(\"DOM fully loaded and parsed\");\n    const friendRequestForm = document.querySelector(\"#friend-request-form\");\n    if (friendRequestForm) {\n        friendRequestForm.addEventListener(\"submit\", (event) => __awaiter(void 0, void 0, void 0, function* () {\n            event.preventDefault(); // Prevent the default form submission\n            const friendIdInput = document.querySelector('input[name=\"friendId\"]');\n            const friendId = friendIdInput === null || friendIdInput === void 0 ? void 0 : friendIdInput.value;\n            try {\n                const response = yield fetch(\"/friends/send\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({ friendId }),\n                });\n                const result = yield response.json();\n                if (response.ok) {\n                    // Clear the input field\n                    friendIdInput.value = \"\";\n                    // Dynamically add the friend request to the friends list\n                    const friendsListContainer = document.querySelector('div[style*=\"height: 100px\"]');\n                    if (friendsListContainer) {\n                        const newFriendRequest = document.createElement(\"div\");\n                        newFriendRequest.style.display = \"flex\";\n                        newFriendRequest.style.justifyContent = \"space-between\";\n                        newFriendRequest.style.padding = \"5px\";\n                        newFriendRequest.innerHTML = `\n                            <span>${friendId}</span>\n                            <button type=\"button\" class=\"remove-friend\" data-id=\"${friendId}\">Pending</button>\n                        `;\n                        friendsListContainer.appendChild(newFriendRequest);\n                        // Add event listener to the new \"remove-friend\" button\n                        const removeButton = newFriendRequest.querySelector(\".remove-friend\");\n                        if (removeButton) {\n                            removeButton.addEventListener(\"click\", (event) => __awaiter(void 0, void 0, void 0, function* () {\n                                event.preventDefault();\n                                try {\n                                    const removeResponse = yield fetch(\"/friends/remove\", {\n                                        method: \"POST\",\n                                        headers: {\n                                            \"Content-Type\": \"application/json\",\n                                        },\n                                        body: JSON.stringify({ friendId }),\n                                    });\n                                    if (removeResponse.ok) {\n                                        alert(\"Friend removed successfully!\");\n                                        newFriendRequest.remove(); // Remove the friend entry from the DOM\n                                    }\n                                    else {\n                                        alert(\"Error removing friend.\");\n                                    }\n                                }\n                                catch (error) {\n                                    console.error(\"Error:\", error);\n                                    alert(\"An error occurred while removing the friend.\");\n                                }\n                            }));\n                        }\n                    }\n                }\n                else {\n                    alert(\"Error sending friend request: \" + result.error);\n                }\n            }\n            catch (error) {\n                console.error(\"Error:\", error);\n                alert(\"An error occurred while sending the friend request.\");\n            }\n        }));\n    }\n    const acceptButtons = document.querySelectorAll(\".approve-friend\");\n    acceptButtons.forEach((button) => {\n        button.addEventListener(\"click\", (event) => __awaiter(void 0, void 0, void 0, function* () {\n            event.preventDefault();\n            const friendId = button.getAttribute(\"data-id\");\n            try {\n                const response = yield fetch(\"/friends/accept\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({ friendId }),\n                });\n                const result = yield response.json();\n                if (response.ok) {\n                    location.reload(); // Reload the page to update the friends list\n                }\n                else {\n                    alert(\"Error accepting friend request: \" + result.error);\n                }\n            }\n            catch (error) {\n                console.error(\"Error:\", error);\n                alert(\"An error occurred while accepting the friend request.\");\n            }\n        }));\n    });\n    const rejectButtons = document.querySelectorAll(\".reject-friend\");\n    rejectButtons.forEach((button) => {\n        button.addEventListener(\"click\", (event) => __awaiter(void 0, void 0, void 0, function* () {\n            event.preventDefault();\n            const friendId = button.getAttribute(\"data-id\");\n            console.log(\"Friend ID to reject:\", friendId); // Debugging line\n            try {\n                const response = yield fetch(\"/friends/reject\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({ friendId }),\n                });\n                const result = yield response.json();\n                if (response.ok) {\n                    location.reload(); // Reload the page to update the friends list\n                }\n                else {\n                    alert(\"Error rejecting friend request: \" + result.error);\n                }\n            }\n            catch (error) {\n                console.error(\"Error:\", error);\n                alert(\"An error occurred while rejecting the friend request.\");\n            }\n        }));\n    });\n    const removeFriendsButtons = document.querySelectorAll(\".remove-friend\");\n    removeFriendsButtons.forEach((button) => {\n        button.addEventListener(\"click\", (event) => __awaiter(void 0, void 0, void 0, function* () {\n            event.preventDefault();\n            const friendId = button.getAttribute(\"data-id\");\n            console.log(\"Friend ID to remove:\", friendId); // Debugging line\n            try {\n                const response = yield fetch(\"/friends/remove\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({ friendId }),\n                });\n                const result = yield response.json();\n                if (response.ok) {\n                    location.reload(); // Reload the page to update the friends list\n                }\n                else {\n                    alert(\"Error removing friend: \" + result.error);\n                }\n            }\n            catch (error) {\n                console.error(\"Error:\", error);\n                alert(\"An error occurred while removing the friend.\");\n            }\n        }));\n    });\n});\n\n\n//# sourceURL=webpack://term-project-jarl/./src/client/js/friends.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/client/js/friends.ts"]();
/******/ 	
/******/ })()
;