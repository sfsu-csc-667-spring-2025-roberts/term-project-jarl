<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Poker</title>
    <%- include('shared/head') %>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/games.css" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" defer></script>
    <script src="/socket.io/socket.io.js"></script> 
    <script src="/js/games.js" defer></script>
    <script src="/js/actions.js" defer></script>
  </head>

  <body>
    <%- include('partials/header', { user: locals.user }) %>

    <input type="hidden" id="room-id" value="<%= gameId %>">

    <main id="gameId-<%= gameId %>">
      <div id="game-header">
        <div>
          <h1>Welcome <%= user.email %> (<%= user.user_id %>)</h1>
          <p>Game page <%= gameId %></p>
          <a href="#" id="start-game-btn">Start Game</a>
        </div>
        <button id="leave-game-btn">Leave Game</button>
      </div>

      <div id="card-container" class="card-container"></div>

      <div id="poker-table">
        <div class="player-seat d-none" id="player-1"></div>
        <div class="player-seat d-none" id="player-2"></div>
        <div class="player-seat d-none" id="player-3"></div>
        <div class="player-seat d-none" id="player-4"></div>
        <div id="pot">Pot: $<%= pot %></div>
      </div>

      <% if (!gameStarted) { %>
        <div id="action-buttons">
          <p>Waiting for host to start the game...</p>
        </div>
      <% } else if (isInHand) { %>
        <div id="action-buttons">
          <button id="btn-call">Call</button>
          <button id="btn-raise">Raise</button>
          <button id="btn-fold">Fold</button>
        </div>
        <% if (stack === 0) { %>
          <div class="text-danger">You don't have enough chips to bet.</div>
        <% } %>
      <% } else { %>
        <div id="action-buttons">
          <p>Waiting for the next hand...</p>
        </div>
      <% } %>

      <div id="player-stack">Your Money: $<%= stack %></div>

      <div></div>
      <div id="leave-game-container" class="hidden">
        <%- include('shared/leave-game') %>
      </div>
    </main>

    <div id="game-chat-container">
      <div id="game-chat-messages" class="chat-messages"></div>
      <form id="game-chat-form">
        <input id="game-chat-input" type="text" placeholder="Type your message..." autocomplete="off" />
        <button type="submit">Send</button>
      </form>
    </div>

    <script>
      const socket = io();
      const roomId = document.getElementById("room-id")?.value;

      console.log("Joining room", roomId);
      if (roomId) {
        socket.emit("join-room", roomId);

        socket.emit("player-joined", {
          roomId: `room-${roomId}`,
          email: "<%= user.email %>"
        });
      }

      socket.on(`chat-message:${roomId}`, ({ message, sender, gravatar, timestamp }) => {
        const chat = document.getElementById("game-chat-messages");
        const div = document.createElement("div");
        div.className = "chat-message";
        div.innerHTML = `<strong>${sender}</strong>: ${message} <span style="font-size: 0.8em;">${new Date(timestamp).toLocaleTimeString()}</span>`;
        chat.appendChild(div);
        chat.scrollTop = chat.scrollHeight;
      });

      document.getElementById("game-chat-form")?.addEventListener("submit", (e) => {
        e.preventDefault();
        const input = document.getElementById("game-chat-input");
        const message = input.value;
        if (message.trim()) {
          fetch(`/chat/${roomId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ message })
          });
          input.value = "";
        }
      });

      // Implementing dynamic player seats
      socket.on(`game:${roomId}:player-joined`, ({ playerCount, email }) => {
        const seatId = `player-${playerCount}`;
        const seat = document.getElementById(seatId);
        if (seat) {
          seat.textContent = email;
          seat.classList.remove("d-none");
        }
      });

      socket.on(`game:${roomId}:players`, (playerList) => {
        playerList.forEach((email, index) => {
          const seatId = `player-${index + 1}`;
          const seat = document.getElementById(seatId);
          if (seat) {
            seat.textContent = email;
            seat.classList.remove("d-none");
          }
        });
      });
    </script>
  </body>
</html>